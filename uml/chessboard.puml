@startuml

skinparam backgroundcolor transparent

/' Objects '/

class ChessBoard {
	+sideToMove : Color
	+fullMoveClock : int
	+halfMoveClock : int
	+enPassantSquare : int
	+castlingRights : CastlingRights

    +squares : std::array<Square, 64>
	+whitePieces : std::vector<Piece>
	+blackPieces : std::vector<Piece>
	+whitePawns : std::vector<int>
	+blackPawns : std::vector<int>
	+whiteKing : int
	+blackKing : int

	+moveHistory : std::vector<Move>
	+enPassantHistory : std::vector<int>
    +castlingRightHistory : std::vector<CastlingRights>
    +halfMoveClockHistory : std::vector<int>
    +positionHistory : std::vector<long>
    +irreversibleIndices : std::vector<int>

    +hashCode : long
    +hashCodes : HashCodes

	+makeMove(const Move& move) : void
	+unMakeMove() : void
	+isDraw() : bool
	-movePiece(int start, int end) : void
	-removePiece(int position) : void
	-setPiece(int position, const Square& piece) : void
	-updateCastlingRights(const Move& move) : void

	+setPosition(std::string fen) : void
	+setStartingPosition() : void
	+fen() : std::string

}


class ChessBoard::CastlingRights {
	+blackKingSide : bool
	+blackQueenSide : bool
	+whiteKingSide : bool
	+whiteQueenSide : bool
}

ChessBoard *-- ChessBoard::CastlingRights
ChessBoard -[hidden]> ChessBoard::CastlingRights

@enduml
